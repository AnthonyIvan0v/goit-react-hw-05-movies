{"version":3,"file":"static/js/778.997684d1.chunk.js","mappings":"+PA0CA,EAtCuB,WACrB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,gHAE8BC,EAAAA,EAAAA,IAAgBN,GAF9C,gBAEYO,EAFZ,EAEYA,QACRH,EAAWG,GAHf,gDAKIC,QAAQC,IAAI,QAAZ,MALJ,0DALc,sBACTT,GADS,mCAadU,EACD,GAAE,CAACV,IAEAG,EAAQQ,OAAS,GAEjB,wBACGR,GACCA,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASd,EAAS,EAATA,GAC9B,OACE,2BACE,oCAAYa,MACZ,uBAAIC,MAFGd,EAKZ,OAIF,6DACR,ECnCD,EAJoB,WAClB,OAAO,SAAC,EAAD,GACR,C,+LCFKe,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CACNC,IAAKL,KAcIM,EAAW,mCAAG,sGACFL,EAASM,IAAT,qCAA2CP,IADzC,uBACjBQ,EADiB,EACjBA,KADiB,kBAElBA,EAAKhB,SAFa,2CAAH,qDAKXiB,EAAY,mCAAG,WAAMxB,GAAN,yFACHgB,EAASM,IAAT,iBAAuBtB,EAAvB,oBAAqCe,IADlC,uBAClBQ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZE,EAAe,mCAAG,WAAMzB,GAAN,yFACNgB,EAASM,IAAT,iBACXtB,EADW,4BACWe,IAFL,uBACrBQ,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,gCACIP,EADJ,iCACoCY,EADpC,yBADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAInBA,EAAKhB,SAJc,2CAAH,sDAOZD,EAAe,mCAAG,WAAMN,GAAN,yFACNgB,EAASM,IAAT,iBACXtB,EADW,4BACWe,IAFL,uBACrBQ,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["modules/Reviews/Reviews.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nexport const Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    async function fetchReviews() {\n      try {\n        const { results } = await getMovieReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  if (reviews.length > 0) {\n    return (\n      <ul>\n        {reviews &&\n          reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n      </ul>\n    );\n  }\n  return <p> There is no reviews on this movie</p>;\n};\nexport default Reviews;\n","import Reviews from 'modules/Reviews/Reviews';\n\nconst ReviewsPage = () => {\n  return <Reviews />;\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'b936dbeb2c24233fe8478f46d56a734f';\nconst BaseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BaseURL,\n  params: {\n    key: API_KEY,\n  },\n});\n\nexport const searchFilms = async (q, _page = 1) => {\n  const { data } = await instance.get('/', {\n    params: {\n      q,\n      _page,\n    },\n  });\n  return data;\n};\n\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/all/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","console","log","fetchReviews","length","map","author","content","API_KEY","instance","axios","baseURL","params","key","getTrending","get","data","getMovieById","getMovieCredits","searchMovies","query"],"sourceRoot":""}