{"version":3,"file":"static/js/746.d244e0b6.chunk.js","mappings":"sPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAAiF,yB,SCmDjF,EA9CoB,WAClB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAIA,IAAMM,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBP,GAFrB,OAEXQ,EAFW,OAGjBJ,EAASI,EAAQC,MAHA,gDAKjBC,QAAQC,IAAI,QAAZ,MALiB,yDAAH,qDAQlBL,GAVC,CAWF,GAAE,CAACN,KAGF,0BACE,eAAIY,UAAWC,EAAf,SACGV,GACCA,EAAMW,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,KAAMhB,EAAmC,EAAnCA,GAAIiB,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAE5CC,EADW,mCACcJ,EAE/B,OACE,gBAAIH,UAAWC,EAAf,WACE,gBACEO,IAAKD,EACLE,IAAKL,EACLJ,UAAWC,KAEb,6BAAKG,GAAQC,MACb,uCAAeC,OAPgBlB,EAUpC,OAIV,EC5CD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C,+LCFKsB,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CACNC,IAAKL,KAcIM,EAAW,mCAAG,sGACFL,EAASM,IAAT,qCAA2CP,IADzC,uBACjBQ,EADiB,EACjBA,KADiB,kBAElBA,EAAKtB,SAFa,2CAAH,qDAKXuB,EAAY,mCAAG,WAAM/B,GAAN,yFACHuB,EAASM,IAAT,iBAAuB7B,EAAvB,oBAAqCsB,IADlC,uBAClBQ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZvB,EAAe,mCAAG,WAAMP,GAAN,yFACNuB,EAASM,IAAT,iBACX7B,EADW,4BACWsB,IAFL,uBACrBQ,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfE,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASM,IAAT,gCACIP,EADJ,iCACoCW,EADpC,yBADG,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,EAAKtB,SAJc,2CAAH,sDAOZ0B,EAAe,mCAAG,WAAMlC,GAAN,yFACNuB,EAASM,IAAT,iBACX7B,EADW,4BACWsB,IAFL,uBACrBQ,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Cast/cast.module.css?9d92","modules/Cast/Cast.jsx","pages/CastPage/CastPage.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__51ksD\",\"item\":\"cast_item__aHuI4\",\"profileImg\":\"cast_profileImg__7StQR\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/movies-api';\n\nimport styles from './cast.module.css';\n\nexport const Cast = () => {\n  const { id } = useParams();\n\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    const fetchCredits = async () => {\n      try {\n        const results = await getMovieCredits(id);\n        setCasts(results.cast);\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n    fetchCredits();\n  }, [id]);\n\n  return (\n    <div>\n      <ul className={styles.list}>\n        {casts &&\n          casts.map(({ profile_path, name, id, original_name, character }) => {\n            const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n            const profilePath = IMG_PATH + profile_path;\n\n            return (\n              <li className={styles.item} key={id}>\n                <img\n                  src={profilePath}\n                  alt={name}\n                  className={styles.profileImg}\n                />\n                <p> {name || original_name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import Cast from 'modules/Cast/Cast';\n\nconst CastPage = () => {\n  return <Cast />;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst API_KEY = 'b936dbeb2c24233fe8478f46d56a734f';\nconst BaseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BaseURL,\n  params: {\n    key: API_KEY,\n  },\n});\n\nexport const searchFilms = async (q, _page = 1) => {\n  const { data } = await instance.get('/', {\n    params: {\n      q,\n      _page,\n    },\n  });\n  return data;\n};\n\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/all/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["id","useParams","useState","casts","setCasts","useEffect","fetchCredits","getMovieCredits","results","cast","console","log","className","styles","map","profile_path","name","original_name","character","profilePath","src","alt","API_KEY","instance","axios","baseURL","params","key","getTrending","get","data","getMovieById","searchMovies","query","getMovieReviews"],"sourceRoot":""}